#!/bin/bash

: ${LAUNCHER:='/usr/libexec/qemu-kvm'}
: ${QEMU_CONF_DIR:='/etc/qemu-kvm/'}

# set -x

containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

# configureBridge BRI_NAME [ IF_TO_CONNECT ]
# if IF_TO_CONNECT is defined, it is added to the bridge device and
# the bridge gets its IP/MASK config
setBridge () {
  local bridge="$1"
  local iface="$2"

  brctl addbr "$bridge"

  if [[ $# -eq 2 ]]; then
    local IP=$(ip addr show dev $iface | grep "inet $IP" | awk '{print $2}' | cut -f1 -d/)
    local CIDR=$(ip addr show dev $iface | grep "inet $IP" | awk '{print $2}' | cut -f2 -d/)

    brctl addif "$bridge" "$iface"
    ip address del "$IP/$CIDR" dev "$iface"
    ip address add "$IP/$CIDR" dev "$bridge"
  fi

  ip link set dev "$bridge" up

}

# Bring up bridge interfaces and configure KVM options for each of them.
configureNetwork () {
  local i=0

  for iface in "${local_ifaces[@]}"; do
    bri_iface="kvmbri$i"

    setBridge "$bri_iface" "$iface"

    echo 'allow '$iface >> $QEMU_CONF_DIR/bridge.conf
    KVM_NET_OPTS="$KVM_NET_OPTS -netdev bridge,br=$bri_iface,id=net$i -device virtio-net-pci,netdev=net$i"

    let i++
  done
}

# For debugging
if [ "$1" = "bash" ]; then
  exec bash
fi

case $AUTO_ATTACH in
    [Yy]* ) AUTO_ATTACH=1;;
    [Nn]* ) AUTO_ATTACH=0;;
    * ) echo "ERROR: AUTO_ATTACH variable not defined."; exit 1;;
esac

if [[ $AUTO_ATTACH -eq 1 ]]; then
  # Get all interfaces:
  local_ifaces=($(ip link show | grep state | grep -v LOOPBACK | awk '{print $2}' | tr -d : | sed 's/@.*$//'))
  local_bridges=($(brctl show | tail -n +2 | awk '{print $1}'))
  echo "${local_ifaces[@]}"
  # Get non-bridge interfaces:
  for i in "${local_bridges[@]}"; do
    local_ifaces=(${local_ifaces[@]//*$i*})
    echo "${local_ifaces[@]}"
  done
else
  local_ifaces="$ATTACH_IFS"
fi

echo "IFS--""${local_ifaces[@]}"

configureNetwork

: ${KVM_BLK_OPTS:="\
  -drive file=/image/image.qcow2,if=none,id=drive-ide0-0-0,format=qcow2,cache=writethrough \
  -device ide-hd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-1,bootindex=1 \
  "}

: ${KVM_OPTS:="-smbios type=1,product=VSC \
  -machine rhel6.0.0,accel=kvm,usb=off \
  -nographic \
  -nodefaults \
  -no-acpi \
  -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x2 \
  -realtime mlock=off \
  -msg timestamp=on \
  -chardev pty,id=charserial0 \
  -device isa-serial,chardev=charserial0,id=serial0
  -serial telnet::4555,server,nowait
  "}

# Pass Docker command args to kvm
# KVM_ARGS="$@"

: ${KVM_ARGS:="-m 1024 -smp 4,sockets=4,cores=1,threads=1"}


# CHECK AUTO_ATTACH var
# If AUTO_ATTACH=no check ATTACH_IFS

exec $LAUNCHER -enable-kvm $KVM_BLK_OPTS $KVM_OPTS $KVM_ARGS $KVM_NET_OPTS
